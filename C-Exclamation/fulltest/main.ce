/** @author aaaa0ggmc
* @date 2025/5/12
* @description Test all the features of ce(Although I've forgotten most of them).
* @language English(to avoid encoding problems)
* @note to run the program,you are supposed to run ce_installer first!
*/
//-1.attributes
//describe the author
//Note that all pragmas can be changed runtime,not like C/C++
#pragma author "aaaa0ggmc"
//disable NoteStarts & NoteEnds promblems 
#pragma waring 1
//force check CESTDAPI for some operations
#pragma CheckApi true
//outputs Global Print Color
#pragma outputColor CL_BIGWHITE
//global input color
#pragma inputColor CL_BIGWHITE

NotesStart
	This is comment!
	just like /*   */
NotesEnd

//0.variables
/* or: var float Number String,actually they are identical to each other.*/ 
BaseObj a = "";

//0.1 comparisons
var v_1 = 0,v_2 = 1;
//comparison values are either 0 or 1
println("0 > 1? " + v_1 > v_2);
println("0 < 1? " + v_1 < v_2);
println("1 >= 1? " + 1 >= 1);
println("1 == 1? " + 1 == 1);
//println("2 != 1? " + 2 != 1); != operators are not supported well!!
//println("2 != 2? " + v_1 != v_1);
println("1 <= 2? " + 1 <= 2);

//if(0){//true & false are not defined...
//1.Hello World!
println("Hello World!");

//2.console io
//2.1 print
print("'Ni hao' in chinese is " + "'Hello' in English.\n");

//2.2 delayed prints
print$d(50,"Hello!I'm talking!!!!");
Sleep(500);
print$d(200,"SERIOUSLY\n");

//2.3 colorful prints (sysVar needed)
print$c(CL_RED,"I'm red!\n");//BUG: cannot resolve escapings
println();
print$c(CL_YELLOW,"I'm yellow!");
println();

//2.4 input
print("Input something here:"); 
a = input(); //you can also use input(a); like Python
////string concats
print$c(CL_GREEN,"You have just written [" + a + "]\n");

//2.5 CE$input invisibly input --- have BUGS
print("Input something here again(now you can press CTRL+ENTER to begin a new line):");
CE$input(a); //CE$input allows you to press CTRL+ENTER to begin a new line
print("You've just written [" + a + "]\n");

//3. util functions
//3.1 system (also runProgram )
system("echo Hello From System Command!");

//3.2 Sleep
print("I'm here to sleep.");
loop(4){
	Sleep(200); //sleep for 100ms
	print("Z");
	Sleep(200);
	print("z");
}
println("\nI'm wide awake now.");

//3.3 SetConsolePosition or CE$setPos
system("clear");
CE$setPos(0,0);
Sleep(500);
print("I've got a secret to tell uuuu");
CE$setPos(10,3);
Sleep(400);
print$d(200,"That is ...........");
CE$setPos(5,5);
print$c(CL_RED,"You are a nerd.");
Sleep(1000);
clear();//Alternative of system("clear");

//3.4 getMousePos relatively to the screen
loop(8){
	var x;
	var y;
	getMousePosX(x);
	getMousePosY(y);
	println("Mouse Absolute Pos:(" + x + "," + y + ")");
	Sleep(300);
} 

//3.5 getMousePos relatively to current window
loop(8){
	var x;
	var y;
	getThisMousePosX(x);
	getThisMousePosY(y);
	println("Mouse Relative Pos:(" + x + "," + y + ")");
	Sleep(300);
} 

//3.6 getKeyInt & getKeyChar
var keycode;
print("Press a key:");
getKeyInt(keycode);
println("\nYou've entered a key whose int value is" + keycode);
print("Press again:");
getKeyChar(keycode);
println("\nYou've pressed [" + keycode + "]");
free("keycode"); //dealloc the variable used above

//3.7 time
var t;
time(t);
print("Current time is " + t);
free("t");

//3.8 isAdmin or isRunAsAdmin
var status = isAdmin();
if(status){
	println("The program runs as admin.");
}else(){ //else blocks
	println("The program doesn't run as admin.");
}

//3.9 random number
println("Here are a range of random numbers ranging from 0-100:");
loop(50){
	var rnd;
	rand(0,100,rnd);
	print(rnd + " ");
}

//3.10 DLL Functions
var dll = "d1";
LoadDLL(dll,"clink.dll"); //load dll
println("DLL loaded");
var value = "[none]";
value = CalInstDLL(dll,"GetWinVersion");
// UnloadDLL(dll);//Unload
println("DLL Reported:" + value);
free("dll");
free("value");

//3.11 seek : display current variables
print$c(CL_BLUE,"Variables now:\n");
seek();

//3.11 declare_var
var vname = "1_newvar";
//declare_var(variable_name(ignores rule),value,Reserved)
declare_var(1_newvar,"","Reserved");
seek();
free(vname);
free("vname");

//3.12 local: display variable attributes
CESTDAPI OUTABLE var info = "xx"; //CESTDAPI & OUTABLE is needed
local(info);
if(1){
	//sub-vars
	CESTDAPI OUTABLE var ffo = "yy";
	local(ffo);
}
free("info");

//3.13 math calcs only +-*/() is supported
var calc_result = math("2*(9+1)/2");
println("2*(9+1)/2 = " + calc_result);
//use $ to link variables
a = 10;
calc_result = math("$a/3+1");
print("Given a = " + a);
print( ",a/3+1 = " + calc_result);//BUG here
println();
free("calc_result");

//4.Grammars
//4.1 conditions
print("Tell me a number:");
var iv = input();
if(iv > 100){
	println("The number is greater than 100!");
}else if(iv == 0){
	println("The number is 0.");
}else(){
	println("The number is smaller than 100 or equals to 100 or maybe it's not a number.");
}
//4.2 loops
//4.2.1 limited loops
var i = 0;
loop(10){
	i += 1; //if the value can be told that it is an integer,the operation operates increase
	println("Hello World *" + i + "!");
}
free("i");
//4.2.2 infinite loops
rloop(){
	break;
	println("I shall be not printed forever.");
}
//4.2.3 while
while(0){
	println("I shall never be executed.");
	continue;
}
//4.2.4 const values
const int v = 0;
// v = 1; cannot do this
free("v");

//4.2.5 extern values:which actually means global variable
if(1){
	extern int ext_1 = "a";
	int ext_2 = "b";
}
println("ext_1 still usable:" + ext_1);//ext_2 is destroyed

//4.2.6 IGNORECASES
CESTDAPI IGNORECASE int hello = "1";
Hello = 2;
HELLO += 2;
HeLlO = hello + 2;
print("hellos:" + heLLO);
